{"version":3,"sources":["panels/Home.js","panels/Form.js","App.js","index.js"],"names":["ids","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","e","_e$currentTarget","currentTarget","name","value","setState","defineProperty","submitHandler","preventDefault","mass","state","text","split","i","length","setTimeout","time","console","log","s","connect","send","app_id","action","params","amount","payValue","description","message","user_id","unshift","forceUpdate","_this$props","id","fetchedUser","go","react_default","a","createElement","vkui","title","concat","first_name","last_name","top","type","onChange","placeholder","onClick","size","data-to","React","Component","App","activePanel","scope","_this2","subscribe","detail","data","status","panels_Home","Persik_default","ReactDOM","render","src_App","document","getElementById"],"mappings":"kOAeIA,EAAM,CAAC,IAmGIC,cAhGb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQRQ,cAAgB,SAAAC,GAAK,IAAAC,EACKD,EAAEE,cAAlBC,EADWF,EACXE,KAAMC,EADKH,EACLG,MACdZ,EAAKa,SAALZ,OAAAa,EAAA,EAAAb,CAAA,GAAiBU,EAAOC,KAXPZ,EAcnBe,cAAgB,SAAAP,GACdA,EAAEQ,iBAEL,IADG,IAAIC,EAAOjB,EAAKkB,MAAMC,KAAKC,MAAM,KAC3BC,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAChCE,WAAWvB,EAAKwB,KAAQ,IAAFH,EAAOJ,EAAKI,IAEhCI,QAAQC,IAAI1B,EAAKkB,QApBAlB,EAwBnBwB,KAAO,SAAAG,GACLC,IAAQC,KAAK,sBAAuB,CAACC,OAAU,QAASC,OAAU,cAAeC,OAAU,CAACC,OAAUjC,EAAKkB,MAAMgB,SAASC,YAAenC,EAAKkB,MAAMkB,QAAQC,QAAWV,KACzK9B,EAAIyC,QAAQ,KACZzC,EAAIyC,QAAQX,GACZ3B,EAAKuC,eA1BHvC,EAAKkB,MAAQ,CACXkB,QAAS,GACTF,SAAU,EACVf,KAAM,IALSnB,wEAgCV,IAAAwC,EACyBrC,KAAKJ,MAA7B0C,EADDD,EACCC,GAAIC,EADLF,EACKE,YADLF,EACkBG,GACzB,OACEC,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAON,GAAIA,GACTG,EAAAC,EAAAC,cAACC,EAAA,YAAD,gBACCL,GACCE,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOC,MAAM,qCAAb,GAAAC,OACMP,EAAYQ,WADlB,KAAAD,OACgCP,EAAYS,YAG9CP,EAAAC,EAAAC,cAACC,EAAA,MAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,WAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBK,IAAI,0DACnBR,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEM,KAAK,OACL1C,KAAK,UACL2C,SAAUnD,KAAKI,cACfK,MAAOT,KAAKe,MAAMkB,QAClBmB,YAAY,4DAGhBX,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBK,IAAI,yFACnBR,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEM,KAAK,SACL1C,KAAK,WACL2C,SAAUnD,KAAKI,cACfK,MAAOT,KAAKe,MAAMgB,YAGtBU,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBK,IAAI,mIACnBR,EAAAC,EAAAC,cAACC,EAAA,SAAD,CACEpC,KAAK,OACL2C,SAAUnD,KAAKI,cACfK,MAAOT,KAAKe,MAAMC,KAClBoC,YAAY,qIAGhBX,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQS,QAASrD,KAAKY,cAAe0C,KAAK,KAAKC,UAAQ,UAAvD,4DAKLd,EAAAC,EAAAC,cAACC,EAAA,MAAD,KACClD,WA5EW8D,IAAMC,sBCZND,IAAMC,0BCyDVC,cAnDd,SAAAA,EAAY9D,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,IAClB7D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4D,GAAAvD,KAAAH,KAAMJ,KAEDmB,MAAQ,CACZ4C,YAAa,OACbpB,YAAa,MAEdd,IAAQC,KAAK,sBAAuB,IACxBD,IAAQC,KAAK,uBAAwB,CAACC,OAAU,QAASiC,MAAS,mBAR5D,OAAA/D,mFAWC,IAAAgE,EAAA7D,KACnByB,IAAQqC,UAAU,SAACzD,GAClB,OAAQA,EAAE0D,OAAOb,MAChB,IAAK,4BACJW,EAAKnD,SAAS,CAAE6B,YAAalC,EAAE0D,OAAOC,OACtC,MACD,IAAK,4BACJ1C,QAAQC,IAAI,QACZD,QAAQC,IAAIlB,EAAE0D,OAAOE,QACrB,MACD,QACC3C,QAAQC,IAAIlB,EAAE0D,OAAOb,MACrB5B,QAAQC,IAAI,WAGfE,IAAQC,KAAK,sBAAuB,qCAgBpC,OACCe,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMe,YAAa3D,KAAKe,MAAM4C,aAC7BlB,EAAAC,EAAAC,cAACuB,EAAD,CAAM5B,GAAG,OAAOC,YAAavC,KAAKe,MAAMwB,YAAaC,GAAIxC,KAAKwC,KAC9DC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAQJ,GAAG,SAASE,GAAIxC,KAAKwC,aA9CfgB,IAAMC,WCDxBhC,IAAQC,KAAK,eAAgB,IAQ7B0C,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f8a26e05.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Panel,\n  Button,\n  Group,\n  PanelHeader,\n  FormLayout,\n  FormLayoutGroup,\n  Input,\n  Textarea,\n} from \"@vkontakte/vkui\";\nimport connect from '@vkontakte/vkui-connect';\n\n\nvar ids = [''];\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      payValue: 1,\n      text: \"\",\n    };\n  }\n\n  changeHandler = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    var mass = this.state.text.split(',');\n\tfor (var i = 0; i < mass.length; i++) {\n\t\tsetTimeout(this.time, i*340, mass[i]);\n\t}\n    console.log(this.state);\n  };\n\n\n  time = s => {\n  \t\tconnect.send(\"VKWebAppOpenPayForm\", {\"app_id\": 7089674, \"action\": \"pay-to-user\", \"params\": {\"amount\": this.state.payValue,\"description\": this.state.message,\"user_id\": s}});\n\t\tids.unshift(',');\n\t\tids.unshift(s);\n\t\tthis.forceUpdate();\n\t};\n\n\n  render() {\n    const { id, fetchedUser, go } = this.props;\n    return (\n      <Panel id={id}>\n        <PanelHeader>Donator</PanelHeader>\n        {fetchedUser && (\n          <Group title=\"User Data Fetched with VK Connect\">\n            {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n          </Group>\n        )}\n        <Group>\n          <FormLayout>\n            <FormLayoutGroup top=\"Сообщение\">\n              <Input\n                type=\"text\"\n                name=\"message\"\n                onChange={this.changeHandler}\n                value={this.state.message}\n                placeholder=\"Сообщение\"\n              />\n            </FormLayoutGroup>\n            <FormLayoutGroup top=\"Размер перевода\">\n              <Input\n                type=\"number\"\n                name=\"payValue\"\n                onChange={this.changeHandler}\n                value={this.state.payValue}\n              />\n            </FormLayoutGroup>\n            <FormLayoutGroup top=\"Список идентификаторов\">\n              <Textarea\n                name=\"text\"\n                onChange={this.changeHandler}\n                value={this.state.text}\n                placeholder=\"Список идентификаторов\"\n              />\n            </FormLayoutGroup>\n            <Button onClick={this.submitHandler} size=\"xl\" data-to=\"persik\">\n              Перевести\n            </Button>\n          </FormLayout>\n        </Group>  \n       <Group>\n       {ids}\n       </Group>\n      </Panel>\n\n    );\n  }\n}\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\r\n\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('A name was submitted: ' + this.state.value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Form from './panels/Form';\nimport Persik from './panels/Persik';\n\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t\tvar token = connect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7089674, \"scope\": \"friends,status\"});\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppOpenPayFormResult':\n\t\t\t\t\tconsole.log(\"5678\");\n\t\t\t\t\tconsole.log(e.detail.status);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t\t\tconsole.log(\"1234\");\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\t// go = (e) => {\n\t// \tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t// };\n\n\t\n\n// \tsleep= (time) =>{\n//   return new Promise((resolve) => setTimeout(resolve, time));\n// }\n\n\t\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}